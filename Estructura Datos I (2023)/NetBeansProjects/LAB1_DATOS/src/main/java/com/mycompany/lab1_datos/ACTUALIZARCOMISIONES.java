/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.lab1_datos;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.*;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.regex.Pattern;
import java.util.regex.Matcher;



/**
 *
 * @author LENOVO V14-G2
 */
public class ACTUALIZARCOMISIONES extends javax.swing.JFrame {

    /**
     * Creates new form ACTUALIZARCOMISIONES
     */
    public ACTUALIZARCOMISIONES() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 0, 14)); // NOI18N
        jLabel3.setText("Actualizar campo \"Comisiones\"");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Filtrar segun lo deseado:");

        jButton1.setText("Boton del Dinero");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(108, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(104, 104, 104))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(79, 79, 79)
                .addComponent(jLabel3)
                .addGap(40, 40, 40)
                .addComponent(jButton1)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    String rutaVentas = "C:/Users/LENOVO V14-G2/Documents/labo1/Ventas.csv";
        String rutaEmpleados = "C:/Users/LENOVO V14-G2/Documents/labo1/Empleados.csv";

        Map<String, Double> ventasPorCedula = new HashMap<>();

        // Leer el archivo de ventas y calcular las ventas por cédula
        try (BufferedReader br = new BufferedReader(new FileReader(rutaVentas))) {
            String linea;
            while ((linea = br.readLine()) != null) {
                String[] campos = linea.split(",");
                if (campos.length >= 2) {
                    String cedula = campos[1];
                    double monto = Double.parseDouble(campos[5]); // Suponiendo que el monto está en el sexto campo
                    ventasPorCedula.put(cedula, ventasPorCedula.getOrDefault(cedula, 0.0) + monto);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al leer el archivo de Ventas.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Actualizar las comisiones en el archivo de Empleados
        try (BufferedReader br = new BufferedReader(new FileReader(rutaEmpleados));
             BufferedWriter bw = new BufferedWriter(new FileWriter("C:/Users/LENOVO V14-G2/Documents/labo1/Empleados_actualizado.csv"))) {

            String linea;
            while ((linea = br.readLine()) != null) {
                String[] campos = linea.split(",");
                if (campos.length >= 2) {
                    String cedula = campos[1];
                    double comisiones = Double.parseDouble(campos[6]); // Suponiendo que las comisiones están en el séptimo campo
                    if (ventasPorCedula.containsKey(cedula)) {
                        double ventas = ventasPorCedula.get(cedula);
                        if (ventas > 30000000) {
                            comisiones += ventas * 0.02; // Agregar el 2% de comisión
                        }
                    }
                    campos[6] = String.valueOf(comisiones); // Actualizar el valor de comisiones
                }
                bw.write(String.join(",", campos));
                bw.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al actualizar las comisiones.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Renombrar el archivo actualizado
        File archivoActual = new File("C:/Users/LENOVO V14-G2/Documents/labo1/Empleados_actualizado.csv");
        File archivoAnterior = new File(rutaEmpleados);
        if (archivoAnterior.delete() && archivoActual.renameTo(archivoAnterior)) {
            JOptionPane.showMessageDialog(this, "Comisiones actualizadas con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Error al renombrar el archivo actualizado.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ACTUALIZARCOMISIONES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ACTUALIZARCOMISIONES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ACTUALIZARCOMISIONES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ACTUALIZARCOMISIONES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ACTUALIZARCOMISIONES().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
